import org.gradle.internal.os.OperatingSystem
plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'org.jetbrains.kotlin.android'
    id "com.google.protobuf" version "0.8.17"
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.tkpd.devcamp2022"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.fragment:fragment-ktx:1.5.3'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.test:rules:1.4.0'
    implementation('androidx.test.espresso:espresso-contrib:3.4.0') {
        exclude module: "protobuf-lite"
    }
    implementation 'androidx.test.espresso:espresso-intents:3.4.0'
    implementation 'androidx.fragment:fragment-ktx:1.5.3'
    implementation "io.coil-kt:coil:2.2.1"
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'

    implementation "androidx.work:work-runtime-ktx:2.7.1"

    testImplementation "io.mockk:mockk:1.12.8"
    testImplementation "io.mockk:mockk-agent-jvm:1.12.8"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.3'
    testImplementation "io.mockk:mockk:1.12.8"
    testImplementation "io.mockk:mockk-agent-jvm:1.12.8"

//  TODO Connecting to Internet - NewsApp - step 2 - add retrofit library and replace gson with converter-gson
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'

    // chucker
    implementation 'com.github.chuckerteam.chucker:library:3.5.2'
    releaseImplementation 'com.github.chuckerteam.chucker:library-no-op:3.5.2'

    //shimmer loading
    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    //DataStore
    implementation("androidx.datastore:datastore-preferences:1.0.0")
    implementation  "androidx.datastore:datastore-core:1.0.0"
    implementation  "com.google.protobuf:protobuf-javalite:3.14.0"

    //Room
    implementation("androidx.room:room-runtime:2.4.3")
    kapt("androidx.room:room-compiler:2.4.3")

    // FCM
    implementation platform('com.google.firebase:firebase-bom:30.4.1')
    implementation 'com.google.firebase:firebase-messaging-ktx:23.0.8'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // Mapbox
    implementation 'com.mapbox.maps:android:10.8.0'
}

protobuf {
    protoc {
        //Please Check your current OS
        OperatingSystem os = OperatingSystem.current();
        if (os.isWindows()) {
            artifact = "com.google.protobuf:protoc:3.14.0:windows-x86_64"
        } else if (os.isMacOsX()) {
            artifact = "com.google.protobuf:protoc:3.14.0:osx-x86_64"
        } else if (os.isLinux()) {
            artifact = "com.google.protobuf:protoc:3.14.0:linux-x86_64"
        }
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}